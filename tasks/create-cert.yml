---
- name: Check if certificate already exists.
  stat:
    path: /etc/letsencrypt/live/{{ certbot_domain }}/cert.pem
  register: letsencrypt_cert

  
- name: Generate new certificate if one doesn't exist.
  command: "{{ certbot_create_command }}"
  when: not letsencrypt_cert.stat.exists


- name: Configure Apache | RedHat
  lineinfile:
    dest: "{{ apache_conf_path }}/ssl.conf"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - regexp: '^SSLCertificateFile '
      line: 'SSLCertificateFile /etc/letsencrypt/live/{{ certbot_domain }}/cert.pem'
    - regexp: '^SSLCertificateKeyFile '
      line: 'SSLCertificateKeyFile /etc/letsencrypt/live/{{ certbot_domain }}/privkey.pem'
    - regexp: '^#?SSLCertificateChainFile '
      line: 'SSLCertificateChainFile /etc/letsencrypt/live/{{ certbot_domain }}/chain.pem'

  notify: reload apache
  when: ansible_os_family == "RedHat"


- name: Configure Apache | Debian
  lineinfile:
    dest: "{{ apache_conf_path }}/sites-available/default-ssl.conf.conf"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - regexp: '^SSLCertificateFile '
      line: 'SSLCertificateFile /etc/letsencrypt/live/{{ certbot_domain }}/cert.pem'
    - regexp: '^SSLCertificateKeyFile '
      line: 'SSLCertificateKeyFile /etc/letsencrypt/live/{{ certbot_domain }}/privkey.pem'
    - regexp: '^#?SSLCertificateChainFile '
      line: 'SSLCertificateChainFile /etc/letsencrypt/live/{{ certbot_domain }}/chain.pem'

  notify: reload apache
  when: ansible_os_family == "Debian"

  
- name: a2ensite default-ssl site | Debian
  command: a2ensite letsencrypt-well-known
  args:
    creates: "{{ apache_conf_path }}/sites-enabled/default-ssl.conf"
  notify: reload apache
  when: ansible_os_family == "Debian"

  

